import random

def e_primo_miller_rabin(numero, repeticoes=5):
    """
    Determina se um número é primo usando o teste de primalidade de Miller-Rabin.

    Args:
        numero (int): O número a ser testado.
        repeticoes (int): Número de repetições do teste para aumentar a confiança.

    Returns:
        bool: True se o número for provavelmente primo, False se for composto.
    """
    # Casos base
    if numero <= 1:
        return False
    if numero <= 3:
        return True

    # Se o número for par, não é primo
    if numero % 2 == 0:
        return False

    # Encontra (s, d) tal que n - 1 = 2**s * d com d ímpar
    s = 0
    d = numero - 1
    while d % 2 == 0:
        s += 1
        d //= 2

    # Executa o teste repetidas vezes
    for _ in range(repeticoes):
        a = random.randint(2, numero - 2)
        x = pow(a, d, numero)

        if x == 1 or x == numero - 1:
            continue

        for _ in range(s - 1):
            x = pow(x, 2, numero)
            if x == numero - 1:
                break
        else:
            # Não encontrou um testemunha forte
            return False

    # Passou em todos os testes, provavelmente é primo
    return True


numero = 1697804804198458568513
if e_primo_miller_rabin(numero):
    print(f"{numero} é provavelmente primo")
else:
    print(f"{numero} é composto")